System.register(["jimu-core","jimu-ui"],(function(e,t){var i={},s={};return{setters:[function(e){i.dataSourceUtils=e.dataSourceUtils,i.expressionUtils=e.expressionUtils},function(e){s.utils=e.utils}],execute:function(){e((()=>{var e={14321:e=>{"use strict";e.exports=s},79244:e=>{"use strict";e.exports=i}},t={};function o(i){var s=t[i];if(void 0!==s)return s.exports;var n=t[i]={exports:{}};return e[i](n,n.exports,o),n.exports}o.d=(e,t)=>{for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.p="";var n={};return o.p=window.jimuConfig.baseUrl,(()=>{"use strict";o.r(n),o.d(n,{default:()=>i});var e=o(79244),t=o(14321);class i{constructor(){this.id="image-app-config-operation"}useDataSourceWillChange(t,i,s){var o,n;const r=t.widgets[this.widgetId],a=r.config.functionConfig;if(!a||!i)return t;let u;if(e.dataSourceUtils.areDerivedFromSameMain(i,s))u=a.set("srcExpression",e.expressionUtils.replaceDataSourceId(a.srcExpression,i,s,this.widgetId,t)).set("altTextExpression",e.expressionUtils.replaceDataSourceId(a.altTextExpression,i,s,this.widgetId,t)).set("toolTipExpression",e.expressionUtils.replaceDataSourceId(a.toolTipExpression,i,s,this.widgetId,t)).setIn(["linkParam","expression"],e.expressionUtils.replaceDataSourceId(null===(o=a.linkParam)||void 0===o?void 0:o.expression,i,s,this.widgetId));else{r.useDataSources.find((e=>e.dataSourceId===i))&&(u=a.without("srcExpression").without("altTextExpression").without("toolTipExpression").set("linkParam",null===(n=a.linkParam)||void 0===n?void 0:n.without("expression")).set("dynamicUrlType",null).set("altTextWithAttachmentName",null).set("toolTipWithAttachmentName",null).set("isSelectedFromRepeatedDataSourceContext",null).set("useDataSourceForMainDataAndViewSelector",null))}if(u){return t.setIn(["widgets",this.widgetId,"config","functionConfig"],u)}return t}afterWidgetCopied(i,s,o,n,r){if(!r)return n;let a=n;const u=s.widgets[i],c=null==u?void 0:u.config,{linkParam:l,isChanged:p}=t.utils.mapLinkParam(r,c.functionConfig.linkParam,u);p&&(a=a.setIn(["widgets",o,"config","functionConfig","linkParam"],l));const d=u.useDataSources,f=e.dataSourceUtils.mapUseDataSources(r,d);a=f.isChanged?a.setIn(["widgets",o,"useDataSources"],f.useDataSources):a;const g=c.functionConfig.srcExpression,x=e.expressionUtils.mapExpression(r,g,u);a=x.isChanged?a.setIn(["widgets",o,"config","functionConfig","srcExpression"],x.expression):a;const S=c.functionConfig.altTextExpression,m=e.expressionUtils.mapExpression(r,S,u);a=m.isChanged?a.setIn(["widgets",o,"config","functionConfig","altTextExpression"],m.expression):a;const w=c.functionConfig.toolTipExpression,h=e.expressionUtils.mapExpression(r,w,u);a=h.isChanged?a.setIn(["widgets",o,"config","functionConfig","toolTipExpression"],h.expression):a;const C=c.functionConfig.useDataSourceForMainDataAndViewSelector,D=e.dataSourceUtils.mapUseDataSource(r,C);return a=D.isChanged?a.setIn(["widgets",o,"config","functionConfig","useDataSourceForMainDataAndViewSelector"],D.useDataSource):a,a}}})(),n})())}}}));